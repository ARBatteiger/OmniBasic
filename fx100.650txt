( VICAM DISPLAY MESSAGES                       16:51 10/26/89 ) 
: FX100 ;                                                       
100 CONSTANT model#            ( Initially compile model FX100) 
0 VARIABLE fUNITS        ( Flag for rnd and display UNITS ONLY) 
0 VARIABLE MODEL#                                               
: REMOV "REMOV DISPLAY2 w-TYPE ;                                
: GETUNITS                                                      
  QAflg @ IF 0 fUNITS ! EXIT THEN ( If QA bat,  DECIMAL & EXIT  
  "?UNITS1 DISPLAY1 w-TYPE "?UNITS2 DISPLAY2  w-TYPE            
  0 BEGIN DROP PCkey F1 OVER = OVER F3 = OR UNTIL               
  F1 = fUNITS ! ;                                               
: PROMPT-SOFTKEYS                                               
   "SOFTkeys DISPLAY2 w-TYPE "ACK DISPLAY1 w-TYPE               
   BEGIN PCkey 13 = UNTIL ;                                     
                                                                
                                                                
( VIAL CHECKS AND ABORT MESSAGE                16:30 10/26/89 ) 
                                                                
0 VARIABLE TESTTYPE                                             
: GET-ABORTMSG ( Select abort msg by type; CAL,BLANK or TEST)   
   TESTTYPE @                                                   
   DUP 2 = IF DROP "ABORTcal EXIT THEN                          
       1 = IF "ABORTblk EXIT THEN                               
   "ABORTtst ;                                                  
                                                                
0 VARIABLE KEYLOCK                                              
: CHK-PRNTok PRNTerr @ PRNTR? @ 0= AND                          
   IF 'RECHECK-PRNTR 2000.EXE THEN ;                            
                                                                
                                                                
                                                                
                                                                
( GOOD DATA CHECK                              1 17:34 05/10/81 
0 VARIABLE fEr<Limit                                            
: ?DATAok ( --f) -1 fABORT !               ( Preset abort flg ) 
  ?VIAL-OUT                                                     
  IF GET-ABORTMSG DISPLAY1 w-TYPE 0 EXIT THEN                   
  TRIGerr @                                                     
  IF "LMPFAIL1 DISPLAY1 w-TYPE 0 EXIT THEN                      
  GAINexp @ GAINlimit @ >=                                      
  IF "UNRNGE DISPLAY1 w-TYPE -1 >990err ! 0 EXIT THEN           
  SIGok @ 0=                                                    
  IF "SIGerr DISPLAY1 w-TYPE -1 >990err ! 0 EXIT THEN           
  REFok  @ 0=                                                   
  IF "REFERR DISPLAY1 w-TYPE -1 >990err ! 0 EXIT THEN           
  fEr<Limit @ 0=                                                
  IF "UNSTBL DISPLAY1 w-TYPE -1 >990err ! 0 EXIT THEN           
  0 fABORT ! -1 ;                                               
( VIAL IN/OUT WAIT LOOPS                       06:37 09/15/90 ) 
0 VARIABLE fNEGOK                                               
: WAIT[VialIn]                                                  
   BEGIN CHK-PRNTok ?BKliteOFF UPDATEkeyQ                       
     F2key @ IF -1 fNEGOK ! "RDCAL DISPLAY2 w-TYPE THEN         
     VIALSWI/O C@ VIALbit AND 0=                                
     IF 250 DELAY[ms] VIALSWI/O C@ VIALbit AND 0= ELSE 0 THEN   
     IF -1 fVIAL ! ELSE 0 fVIAL ! THEN fVIAL @ UNTIL BKliteON ; 
: WAIT[VialOut] 0 F3key !                                       
  BEGIN F3key @ IF 'DO-TEST @ EXECUTE 0 F3key ! REMOV THEN      
   F2key @ IF -1 fNEGOK ! "RDCAL DISPLAY2 w-TYPE THEN           
   KEYLOCK @ 0= IF UPDATEkeyQ THEN CHK-PRNTok ?BKliteOFF        
   VIALSWI/O C@ VIALbit AND 0=                                  
   IF -1 ELSE 100 DELAY[ms] VIALSWI/O C@ VIALbit AND 0= THEN    
   IF -1 fVIAL ! ELSE 0 fVIAL ! THEN fVIAL @ 0=                 
  UNTIL 0 fVIAL ! 0 fNEGOK ! BKliteON ;                         
( 60 ppb CALIBRATOR DP OVERRIDE                        6/7/91)  
: NOdp DUP 0< ( Clear any decimal portion of answer when < 10)  
       IF 0 DO 10 M/MOD ROT REM ! -1 +LOOP                      
          REM @ 4 > IF 1. D+ THEN ( Rnd up)                     
          2DUP RESULTS @ 0< IF DMINUS THEN                      
          2DIGrslt 2! 0 2DIGrslt 4 + !     ( Printer's Answer)  
       ELSE DROP THEN ;                                         
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( ANSWER DISPLAY                               06:57 03/27/90 ) 
                                                                
: SHOW-ANSWER ( d,j -- )                                        
  5 MAXx !     ( Set the maximum No. of dsplyed digits to 5)    
  OVER >R >R DABS R>                                            
  fUNITS @                  ( Display only INTEGERS in answer?) 
  IF NOdp d#CNVRT ELSE F#CNVRT THEN                  ( adr,cnt) 
  >990err @                                     ( -- adr,cnt,f) 
  IF R> DROP 2DROP EXIT THEN         ( Leave if data too large) 
  16 DISPLAY1 wx-TYPE                         ( Display answer) 
  R> 0< IF 45 ELSE 32 THEN 15 DISPLAY1 wx-emit                  
  PPM/PPB @ IF "PPM ELSE "PPB THEN                              
  ( "PPB) 3 22 DISPLAY1 wx-TYPE ;                               
                                                                
                                                                
                                                                
( CALIBRATOR VALUE & DELAY TIME ENTRY          13:54 03/24/89 ) 
: GET-DELAYTIME                                                 
 "TESTDLY DISPLAY1 w-TYPE  "SECS DISPLAY2 w-TYPE                
\  1 MINx ! 3 MAXx ! SMPLDLY @ 0 INITVLU 2! 0 INITVLU 4 + !     
\  0 f+/-# !                              ( Init + input only)  
  SMPLDLY @ 0 INITVLU 2! 0 INITVLU 4 + !                        
  GET[sec] SMPLDLY ! ;                                          
                                                                
: ?CALvlu>BLNKvlu ( j,d -- j,d  j&d are BLANK values)           
  >R 2DUP [ CALIBVLU 4 + ] LITERAL @ CALIBVLU 2@ DROP           
  nF- SWAP DROP 0 <= DUP 0=                                     
  IF "BLKv>CALv DISPLAY1 w-TYPE THEN R> SWAP ;                  
                                                                
                                                                
                                                                
                                                                
( CALIBRATOR VALUE ENTRY                       13:54 06/25/91 ) 
( Operator entry of ppb value of the CAL or Blank. The values ) 
( are saved in base 10 floating point with 1E^0 = 1 ppb.      ) 
: GET-CAL-VALUE "CALVLU DISPLAY1 w-TYPE                         
   PPM/PPB @ IF "NTRppm ELSE "NTRppb THEN DISPLAY2 w-TYPE       
   1 MINx !  2 MAXx !      ( Set digit dsply start & stop clmn) 
   0 f+/-# !                             ( Init pos input only) 
   CALIBVLU 2@ INITVLU 2!                                       
   [ CALIBVLU 4 + ] LITERAL @ [ INITVLU 4 + ] LITERAL !         
   INITVLU 4 + @ -1 <                                           
   IF INITVLU 2@ INITVLU 4 + @ ABS 1 DO 10 D/ LOOP              
      INITVLU 2! -1 INITVLU 4 + ! THEN                          
   0 0. BEGIN 2DROP DROP GET[F#] 2DUP 0. D> UNTIL               
   ROT >R BEGIN 2DUP 1000. D<= IF 10 D* R> 1- >R 0 ELSE -1 THEN 
                UNTIL R>                                        
   [ CALIBVLU 4 + ] LITERAL ! CALIBVLU 2! ;                     
( CALIBRATOR VALUE ENTRY                       13:54 06/25/91 ) 
: GET-BLANK-VALUE "BLNKVLU DISPLAY1 w-TYPE                      
  0 0. BEGIN 2DROP DROP                                         
         PPM/PPB @ IF "NTRppm ELSE "NTRppb THEN                 
         DISPLAY2 w-TYPE                                        
         1 MINx ! 2 MAXx ! -1 f+/-# ! ( Allow +&- number entry) 
         BLNKVLU 2@ INITVLU 2!                                  
         [ BLNKVLU 4 + ] LITERAL @ [ INITVLU 4 + ] LITERAL !    
         GET[F#] ?CALvlu>BLNKvlu                                
       UNTIL                                                    
       BLNKVLU 2! [ BLNKVLU 4 + ] LITERAL ! ;                   
                                                                
                                                                
                                                                
                                                                
                                                                
( MEASUREMENT DATA ACQUISITION                 1 06:11 05/10/81 
: ACQUIRE-SAMPLES    SMPLtotal @ 0                              
    DO READ-SAMPLE ?VIAL-OUT fABORT @ OR IF LEAVE THEN LOOP     
    ?VIAL-IN fABORT @ 0= AND IF REJECT-OUTLYERS THEN ;          
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
(                                                16:32 05/10/81 
( 0 VARIABLE CYCL[n] 0 VARIABLE MINSMPL#                        
( 0 VARIABLE R[Hi]  0 VARIABLE R[Lo]  0 VARIABLE Dlta           
( 0 VARIABLE SUM[Rn] 4 ALLOT-RAM                                
( 0 VARIABLE 1/Dlta 4 ALLOT-RAM                                 
( : INIT-READING 0. SUM[Rn] 2!                                  
(   0 R[Hi] ! 32767 R[Lo] ! 0 CYCL[n] ! ;                       
50 CONSTANT #TRIES  40 CONSTANT Limit ( 1/.025 )                
: TYPE-ANSWER ( d --) <# # # # # 46 HOLD #S #> TYPE ;           
( : TYPE-%Dlta   <# # # 46 HOLD #S #> TYPE ;                    
( : TYPE-RAWDTA ."  { SUM[S/R]=" SUM[Rn] 2@ TYPE-ANSWER         
(   ."   Hi-Lo=" R[Hi] @ 0 R[Lo] @ 0 D- TYPE-ANSWER ."  }" ;    
: TYPE-ALL CR SUM[Rn] 2@ CYCL[n] @ D/ OVER AVE[S/R] !           
  ." S/R=" TYPE-ANSWER ."  10^" GAINexp @ MINUS .               
  ."  %DLTA=" Dlta @ 0 TYPE-%Dlta ( 4 SPACES TYPE-RAWDTA) ;     
                                                                
(                                                13:53 05/10/81 
( Allow 5 gain adjustments if sig saturated )                   
( If gain is adjusted, restart data acq cycle)                  
: @AVEDTA ( -- d) 5 0                                           
  DO SHFTDATA INIT-MEASURE-CYCLE ACQUIRE-SAMPLES                
     CALC[AveS/R] ( -- n) DROP                                  
     SIGok @ DUP 0=         ( If SIG saturated reduce gain)     
     IF GAINvlu @ 10 / DUP 0= IF -1 fABORT ! THEN               
        SETGAIN INIT-SIGFILTER INIT-MEASURE-DATA THEN           
     fABORT @ OR  ( If sig ok OR ABORT flag, leave)             
     IF LEAVE THEN                                              
  LOOP AVE[S/R] @                                               
  DUP R[Hi] @ > IF DUP R[Hi] ! THEN                             
  DUP R[Lo] @ < IF DUP R[Lo] ! THEN 0 ;                         
                                                                
                                                                
(                                                16:31 05/10/81 
: ACQUIRE-READING 0 fABORT ! 0 TRIGerr ! INIT-MEASURE-DATA      
  GAINexp @ 2 > IF 8 ELSE 4 THEN 1- MINSMPL# !                  
  INIT-SIGFILTER PRIME-LAMP-CONTROL CR #TRIES 2+ 0              
  DO @AVEDTA SUM[Rn] 2@ D+ SUM[Rn] 2!                           
     1 CYCL[n] +! CYCL[n] @ DUP . MINSMPL# @ >                  
     IF SUM[Rn] 2@ R[Hi] @ R[Lo] @ - 1 MAX D/ 2DUP 1/Dlta 2!    
        Limit 0 D> fABORT @ OR                                  
        SUM[Rn] 2@ 100 CYCL[n] @ * 0 D< OR IF LEAVE THEN THEN   
  LOOP 1/Dlta 2@                                                
  IF DROP 0                                                     
  ELSE DUP 0< IF DROP 0 ELSE 10000 SWAP 1 MAX / THEN            
  THEN Dlta !                                                   
  CYCL[n] @ #TRIES > 100 #TRIES * 0 SUM[Rn] 2@ D< AND           
  IF CR ." UNSTABLE DATA " 0 ELSE -1 THEN                       
  fEr<Limit ! TYPE-ALL ;  ( TYPE-ALL sets AVE[S/R] )            
(                                                               
: MEASURE-SAMPLE 0 fABORT ! 0 TRIGerr !                         
   AGCGAIN fABORT @ IF EXIT THEN                                
   GAINexp @ GAINlimit @ < IF ACQUIRE-READING THEN ;            
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( CALIBRATOR & BLANK DATA ACQUISITION          11:57 05/10/91 ) 
: GET-CAL-DATA                                                  
 BEGIN 4 GAINlimit !                                            
    "INCAL1 DISPLAY1 w-TYPE "BLANK DISPLAY2 w-TYPE              
    WAIT[VialIn] GET-CAL-VALUE                                  
    "CTEST DISPLAY1 w-TYPE "BLANK DISPLAY2 w-TYPE               
    MEASURE-SAMPLE ?DATAok DUP                                  
    IF AVE[S/R] @ DISPLAY-DATA                                  
       GAINexp @ MINUS SWAP CALdata 2!                          
    ELSE WAIT-ENT THEN                                          
 ?VIAL-IN AND UNTIL ;                                           
: ?CAL>BLANK ( -- f) CALdata 2@ SWAP ABS >R R 4 *               
      BLANKdata + @ > R> GAINlimit @ < AND DUP                  
  0= IF "BLKs>CALs DISPLAY1 w-TYPE WAIT-ENT                     
        "BLANK DISPLAY2 w-TYPE THEN ;                           
                                                                
( CALIBRATOR & BLANK DATA ACQUISITION          16:40 05/15/91 ) 
: GET-BLANK-DATA                                                
 BEGIN "INBLNK1 DISPLAY1 w-TYPE "INBLNK2 DISPLAY2 w-TYPE        
   WAIT[VialIn] GET-BLANK-VALUE 0 fABORT ! 4 GAINlimit !        
   "BTEST DISPLAY1 w-TYPE "BLANK DISPLAY2 w-TYPE                
   CR ." BLANK READINGS" CR                                     
   1 4 0 DO DUP SETGAIN UPDATE-OFFSET                           
            ACQUIRE-READING ?DATAok                             
            IF CR ." SIG=" SIG[Ave] @ . ." REF=" REF[Ave] @ .   
               SIG[Ave] @ 4000 < GAINexp @ I = AND              
               IF I 2+ ELSE DROP -1 I LEAVE THEN GAINlimit !    
               GAINexp @ MINUS AVE[S/R] @ BLANKdata I 4 * + 2!  
               DISPLAY-DATA THEN                                
            ?VIAL-IN 0= fABORT @                                
            OR IF LEAVE THEN 10 * LOOP DROP                     
 ?VIAL-IN fABORT @ 0= AND DUP 0= IF WAIT-ENT THEN UNTIL ;       
                                                                
: CHK-VIALOUT ?VIAL-IN                                          
  IF "REMOV DISPLAY1 w-TYPE                                     
     "BLANK DISPLAY2 w-TYPE WAIT[VialOut] THEN ;                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
\ OLD ROUTINES                                                  
\ 0 VARIABLE PPM/PPB                                            
\ "STRNG" "?PPM1       | SELECT MEASUREMENT UNITS|              
\ "STRNG" "?PPM2       | ppm                  ppb|              
                                                                
: GET-DSPLYUNITS                                                
 "?PPM1 DISPLAY1 w-TYPE "?PPM2 DISPLAY2 w-TYPE                  
  0 BEGIN DROP PCkey F1 OVER = OVER F3 = OR UNTIL               
  F1 = PPM/PPB ! ;                                              
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( INSTRUMENT CALIBRATION                       17:30 09/24/89 ) 
: DO-CALIBRATION -1 KEYLOCK ! -1 CALflg !                       
   BEGIN CHK-VIALOUT MODEL# @ 100 =                             
     IF GET-DELAYTIME GETUNITS GET-DSPLYUNITS                   
     ELSE -1 fUNITS ! THEN                                      
     "WAIT DISPLAY2 w-TYPE "CALSTRT DISPLAY1 w-TYPE CALC-GAINS  
     2 TESTTYPE ! GET-CAL-DATA Dlta @ CAL%Dlta !                
     ?VIAL-IN IF "REMOVCAL DISPLAY1 w-TYPE WAIT[VialOut] THEN   
     1 TESTTYPE ! GET-BLANK-DATA Dlta @ BLANK%Dlta !            
     ?VIAL-IN IF ?CAL>BLANK ( -- f) ELSE 0 THEN         ( -- f) 
   UNTIL                                                        
   GAINlimit @ 3 <= IF "BLNKLIM DISPLAY1 w-TYPE WAIT-ENT THEN   
   ?VIAL-IN IF 'PRNTRDaTm 2000.EXE       ( Buffer up DATE/TIME) 
              "REMOVBLNK DISPLAY1 w-TYPE "BLANK DISPLAY2 w-TYPE 
               WAIT[VialOut] 'PRINT-CALIB 2000.EXE THEN         
   0 KEYLOCK ! 0 CALflg ! -1 CALok ! 0 F1key ! ;                
( SHOW LAST RESULTS                            07:21 09/25/89 ) 
' DO-CALIBRATION CFA 'RECAL !                 ( Set ROM vector) 
: SHOW-LAST-RESULTS >990err @ 0=                                
  IF "LAST Count 1 DISPLAY1 wx-TYPE                             
  ELSE "LAST>990 DISPLAY1 w-TYPE THEN ;                         
                                                                
: "R1  fTEST @ IF EXIT THEN                                     
   CR ." AVE[Sig]=" SIG[Ave] @ . ." AVE[Ref]=" REF[Ave] @ . ;   
: "R12 fTEST @ IF EXIT THEN                                     
   CR ." RESULTS= " 2DUP . ." 10^" . ." ppb/ppm" CR ;           
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( CALCULATION OF TEST RESULTS                  08:04 10/24/89 ) 
: CALC-RESULTS @AVE[S/R] "R1 ( --J,n  "Rn are display routines) 
  GAINexp @ 4 * BLANKdata + 2@ nF-                     ( Sg-Bg) 
  CALIBVLU 4 + @ CALIBVLU 2@ DROP                               
  BLNKVLU 4 + @ BLNKVLU 2@ DROP                                 
  DUP >R OVER >R nF-                               ( Cvlu-Bvlu) 
  CALdata 2@ OVER ABS 4 * BLANKdata + 2@                        
  nF- 1 MAX                                        ( Csig-Bsig) 
  nF*/                                     ( Uncorrected delta) 
  CALdata 2@ DROP ABS 4 * DltaGains + 2@   ( Get Cal gain corr) 
  GAINexp @ 4 * DltaGains + 2@                 ( Sig gain corr) 
  nF*/                                  ( Gain corrected delta) 
  R> R>                                         ( Retreve Bvlu) 
  nF+ "R12 2DUP nFresult 2!                                     
  2DUP S->D RESULTS 2! [ RESULTS 4 + ] LITERAL !                
  S->D j,d>2DIG ;                ( Go calc& sav 2 digit result) 
( SCALED RESULTS OUTPUT                        14:18 10/23/89 ) 
: DISPLAY-RESULTS                                               
  >990err @ IF ">990err DISPLAY1 w-TYPE EXIT THEN               
  "RSLTS DISPLAY1 w-TYPE 2DIGrslt 2@                            
  fNEGOK @ 0=                          ( CHK Answer <0 Allowed) 
  IF 0. DMAX THEN  0 F2key ! 0 fNEGOK !                         
  2DUP 2DIGrslt 2! 2DUP RESULTS 2!                              
  [ 2DIGrslt 4 + ] LITERAL @ DUP [ RESULTS 4 + ] LITERAL !      
  SHOW-ANSWER ;                                                 
0 VARIABLE TOGOt0 4 ALLOT-RAM                                   
: INIT-TOGOt "TOGO DISPLAY2 w-TYPE ( Show time to go on line 2) 
  F2key @                                                       
  IF 3 ELSE SMPLDLY @ THEN        ( Delay is time F2 dependent) 
  DUP 0 TOGOt0 2!                 ( Set displayed Time out sec) 
  10 * 0 TOGOt 2! ;                   ( Set Time Out in .1 sec) 
                                                                
( SAMPLE DATA ACQUISITION                      10:17 09/15/90 ) 
: DO-TEST 5 MAXx !                                              
 ?VIAL-IN                                                       
 IF "READING DISPLAY1 w-TYPE "BLANK DISPLAY2 w-TYPE             
    MEASURE-SAMPLE                                              
    ?VIAL-IN ?DATAok AND                                        
    IF CALC-RESULTS DISPLAY-RESULTS >990err @ 0=                
      IF 'PRNTRDaTm 2000.EXE ( Put DATE/TIME chars in CLKBUF)   
         'PRINT-RESULTS 2000.EXE                                
         fTEST @ 0= IF 'COMNTS 2000.EXE THEN THEN               
    THEN                                                        
    DISPLAY-DATA                                                
 THEN ;                                                         
 ' DO-TEST CFA 'DO-TEST !                     ( Set ROM vector) 
                                                                
                                                                
( SAMPLE DATA ACQUISITION                      18:44 09/15/90 ) 
: DO-SMPLDLY 0 fABORT !                                         
  "TOGO DISPLAY2 w-TYPE            ( Show time to go on line 2) 
  INIT-TOGOt                      ( Initialize TOGO time dsply) 
  CLR-RUNTIME                                                   
  BEGIN TOGOt0 2@ @RUNTIME D- <# #S #> 1 4 DISPLAY2             
    FORMAT-wxTYPE ( adr,cnt,x,n,wpb --  inserts lead spaces)    
    TOGOt 2@ @RUNTIME[10ths]                                    
    D<= ?VIAL-OUT DUP fABORT ! OR UNTIL ;                       
: RUN-SAMPLES f1stTEST @    ( 1st sample tested since power on) 
  IF "TESTING DISPLAY1 w-TYPE THEN                              
  DO-SMPLDLY DO-TEST                                            
  ?VIAL-IN IF REMOV WAIT[VialOut]                               
           ELSE GET-ABORTMSG DISPLAY1 w-TYPE THEN 0 f1stTEST !  
  fABORT @ 0= IF SHOW-LAST-RESULTS THEN ;                       
                                                                
( STARTUP PARAMETER INITIALIZATION             0 06:56 05/11/81 
: INIT-SYSTEM1                                                  
  0 LMPstat !         ( Set normal dta acq, NOT gain test mode) 
  0  fDSPLY !             ( Clear flag for displaying data CRT) 
  BLANKdata 16 OVER + SWAP      ( Clear the blank data storage) 
  DO 0 I ! 2 +LOOP                                              
  -1 f1stTEST !         ( Set flag for 1st test after power on) 
  10 #SMPLS ! 2 #OUTLYERS ! 0 KEYLOCK !                         
  INIT-FLTRTBLS 16 #PRIMES !   ( Initialize SMPL#/OUTLYER fltr) 
  60 SMPLDLY !  ;       ( Set sample delay default to 1 minute) 
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( STARTUP PARAMETER INITIALIZATION             0 06:56 05/11/81 
: INIT-SYSTEM INIT-SYSTEM1     ( Do 1st part of initialization) 
  0 MINx ! 0 MAXx ! 0. INITVLU 2! 0 INITVLU 4 + ! INIT-keyQ     
  0 QAflg ! 0 CALok ! ( Clear QA AutoTest & CAL complete flags) 
  0 F2key !  ( Set Ans >=0 flg)                                 
 -1 CALflg ! -1 fTEST !        ( Disable RECAL key & 711 TESTS) 
 "NAME DISPLAY1 w-TYPE                                          
 model# 100 = IF "MODEL100 ELSE "MODEL101 THEN                  
 DISPLAY2 w-TYPE      2 DELAY[sec] ;                            
                                                                
: SET-DEFAULTS                                                  
( MODEL# @ 100 =          ( Defaults FX100=24ppb, FX101=150ppb) 
( IF GET-DELAYTIME 240. ELSE 60 SMPLDLY ! 1500. THEN            
  240.  ( 24.0 ppb )                                            
  CALIBVLU 2! -1 CALIBVLU 4 + !        ( Set CAL value default) 
  -10. BLNKVLU 2! 1 BLNKVLU 4 + ! ;   ( Set BLANK value to -1 ) 
( VICAM STARTUP                                09:58 10/24/89 ) 
: START DECIMAL '@TSTBYTE @ EXECUTE 123 =                       
 IF 'DO-RUNIN @ EXECUTE THEN                                    
 STOP-PRINTER CLEARSCREEN S0 @ SP! 0 TESTRTN !                  
 BKliteON CR .TITLE                ( Set display back light ON) 
 50 TRIGDLY !       ( Set Default Lmp Fire Dly before SELFTEST) 
 SELFTEST                           ( Perform Startup selftest) 
 model# MODEL# !                      ( Set FX100/FX101 model#) 
 INIT-SYSTEM                                                    
 'INIT-OPTIONS 2000.EXE                                         
 SET-TESTrtn 0 fTEST ! 'DATE/TIME 2000.EXE                      
 SET-TESTrtn SET-DEFAULTS ( Set TST DLY & CALIB VLU defaults)   
 0 fTEST !                         ( allow 711 test activation) 
 DO-CALIBRATION -1 CALflg !                ( Disable Recal key) 
                                                                
 ( Continued on next screen)                                    
( VICAM STARTUP CONTINUED                      12:45 03/21/90 ) 
 SET-TESTrtn PROMPT-SOFTKEYS 0 CALflg !     ( Enable RECAL key) 
 SET-TESTrtn -1 f1stTEST ! 0 TESTTYPE !                         
 "READY DISPLAY1 w-TYPE "STRT DISPLAY2 w-TYPE                   
 S0 @ SP!                                                       
 BEGIN 0 CALflg !                           ( Enable RECAL key) 
      WAIT[VialIn] RUN-SAMPLES "NEXT DISPLAY2 w-TYPE            
      SP@ S0 @ <> IF CR ." DIRTY STACK" S0 @ SP! THEN 0 UNTIL ; 
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( The following 2 words can be used to switch models prior to   
( pulling the associated `S' record                             
: >FX101 101 ' model# !                                         
         0 CHKSUM8 ! CALC-CHKSUM8 -1 XOR CHKSUM8 ! ;            
: >FX100 100 ' model# !                                         
         0 CHKSUM8 ! CALC-CHKSUM8 -1 XOR CHKSUM8 ! ;            
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
\                                                               
( The following 2 words can be used to switch names prior to    
( pulling the `S' records from 2000 and 8000                    
: >TORBEX -1 ' ?TORBEX !                                        
      0 CHKSUM2 ! CALC-CHKSUM2 -1 XOR CHKSUM2 !                 
      0 CHKSUM8 ! CALC-CHKSUM8 -1 XOR CHKSUM8 ! ;               
: >VICAM   0 ' ?TORBEX !                                        
      0 CHKSUM2 ! CALC-CHKSUM2 -1 XOR CHKSUM2 !                 
      0 CHKSUM8 ! CALC-CHKSUM8 -1 XOR CHKSUM8 ! ;               
: FX100END ;                                                    
                                                                
                                                                
                                                                
                                                                
                                                                
                                                                
( INSERT IN FRONT OF DISPLAY RESULTS                            
( SHOW LAST RESULTS                            07:21 09/25/89 ) 
' DO-CALIBRATION CFA 'RECAL !                 ( Set ROM vector) 
: SHOW-LAST-RESULTS >990err @ 0=                                
  IF "LAST Count 1 DISPLAY1 wx-TYPE                             
  ELSE "LAST>990 DISPLAY1 w-TYPE THEN ;                         
                                                                
0 VARIABLE SHOWcalc       : ?Rn SHOWcalc @ ;                    
: "R1  fTEST @ IF EXIT THEN                                     
   CR ." AVE[Sig]=" SIG[Ave] @ . ." AVE[Ref]=" REF[Ave] @ .     
(  CR ." AVE[S/R]=" DUP . ." Exp=" OVER 4 - .                   
(     ." CAL[S/R]=" CALdata 2@ . ." Exp=" 4 - .                 
?Rn IF CR ." In the following calculations the data"            
       CR ." values are ratios of signal to reference."         
       CR ." Equation: RESULTS= ( [Sg-Bg]*[Cvlu-Bvlu]"          
       ." /[Csig-Bsig] ) * Kgain  + Bvlu" CR THEN ;             
( RESULTS COMPUTATION DISPLAY                  0 07:00 05/11/81 
: "R2 ?Rn IF CR ." Sg=" 2OVER . . ." Bg=" 2DUP . . THEN ;       
: "R3 ?Rn IF ." (Sg-Bg)=" 2DUP . . THEN ;                       
: "R4 ?Rn IF CR ." Cvlu=" 2OVER . . ."  Bvlu=" 2DUP . . THEN ;  
: "R5 ?Rn IF ." (Cvlu-Bvlu)=" 2DUP . . THEN ;                   
: "R6 ?Rn IF CR ." Csig=" 2OVER . . ." Bsig=" 2DUP . . THEN ;   
: "R7 ?Rn IF ." ( Csig-Bsig)=" 2DUP . . THEN ;                  
: "R8 ?Rn IF CR ." nF*/ Uncorrected DltaU=" 2DUP . . THEN ;     
: "R9 ?Rn IF CR ." Kcal=" 2OVER . . ." Ksig=" 2DUP . . THEN ;   
: "R10 ?Rn IF ." DeltaC=DeltaU * [Kcal/Ksig]="                  
              2DUP . . THEN ;                                   
: "R11 ?Rn IF CR ." Bvlu=" 2DUP . . THEN ;                      
: "R12 fTEST @ IF EXIT THEN                                     
(              CR ." RESULTS=DltaC + Bvlu= " 2DUP . . CR ;      
   CR ." RESULTS= " 2DUP . ." 10^" . ." ppb/ppm" CR ;           
                                                                
( CALCULATION OF TEST RESULTS                  08:04 10/24/89 ) 
: CALC-RESULTS @AVE[S/R] "R1 ( --J,n  "Rn are display routines) 
  GAINexp @ 4 * BLANKdata + 2@ "R2   nF-  "R3          ( Sg-Bg) 
  CALIBVLU 4 + @ CALIBVLU 2@ DROP                               
  BLNKVLU 4 + @ BLNKVLU 2@ DROP "R4                             
  DUP >R OVER >R nF- "R5                           ( Cvlu-Bvlu) 
  CALdata 2@ OVER ABS 4 * BLANKdata + 2@ "R6                    
  nF- 1 MAX "R7                                    ( Csig-Bsig) 
  nF*/ "R8                                 ( Uncorrected delta) 
  CALdata 2@ DROP ABS 4 * DltaGains + 2@   ( Get Cal gain corr) 
  GAINexp @ 4 * DltaGains + 2@ "R9             ( Sig gain corr) 
  nF*/  "R10                            ( Gain corrected delta) 
  R> R> "R11                                    ( Retreve Bvlu) 
  nF+ "R12 2DUP nFresult 2!                                     
  2DUP S->D RESULTS 2! [ RESULTS 4 + ] LITERAL !                
  S->D j,d>2DIG ;                ( Go calc& sav 2 digit result) 
