DIM Frame AS statictext
dim rb1 as statictext
dim mousex as long
dim mousey as long
dim xoffs as long
dim yoffs as long
dim mousedown as boolean
DIM MoveButton AS BUTTON
dim NormalButton as button
dim TestButton as frame
dim s as string

OBMain.create
mousedown=false
CONSTRUCT Frame,10,10,130,140
Frame.backcolor=$404040
construct rb1,10,10,50,20 in Frame
construct NormalButton,10,160,80,20
NormalButton.text="Normal"
construct MoveButton,100,160,80,20
MoveButton.text="Move"
construct TestButton,200,160,100,100
'TestButton.text="Test"
end event

MoveButton.command
TestButton.intercepton
rb1.intercepton
Frame.intercepton
Timer1.interval=500
end event

NormalButton.command
TestButton.interceptoff
rb1.interceptoff
Frame.interceptoff
Timer1.stop
OBMain.flashwindow=false
end event

rb1.intercept
select case wmsg
	case WM_MOUSEMOVE
		if mousedown=true then
			getcursorposition
			SETPOSITION rb1,CursorPosX-mousex-xoffs,CursorPosY-mousey-yoffs,50,20
			'SETPOSITION Frame,CursorPosX-mousex-xoffs,CursorPosY-mousey-yoffs,130,140
		endif
	case WM_LBUTTONDOWN
		setcapture rb1
		mousedown=true
		xoffs=OBMain.left		
		yoffs=OBMain.top
		'StaticText1.backcolor=$00ff00
		gosub getmousepos
	case WM_LBUTTONUP
		releasecapture
		mousedown=false
		'StaticText1.backcolor=$ffffff
	case else
		passinterceptevent
end select
end event

TestButton.intercept
s=hex(wmsg)
NormalButton.text=s
select case wmsg
	'case $84
		'setcapture TestButton
		'Frame.backcolor=$00ff00
	case $a0
		Frame.backcolor=$00ff00
	case $a1
		Frame.backcolor=$ff0000
	case $a2
		Frame.backcolor=$ff00ff
	case else
		passinterceptevent
end select	
end event

Frame.intercept
select case wmsg
	case WM_MOUSEMOVE
		if mousedown=true then
			getcursorposition
			'SETPOSITION rb1,CursorPosX-mousex-xoffs,CursorPosY-mousey-yoffs,50,20
			SETPOSITION Frame,CursorPosX-mousex-xoffs,CursorPosY-mousey-yoffs,130,140
		endif
	case WM_LBUTTONDOWN
		setcapture Frame
		mousedown=true
		xoffs=OBMain.left		
		yoffs=OBMain.top
		'StaticText1.backcolor=$00ff00
		gosub getmousepos
	case WM_LBUTTONUP
		releasecapture
		mousedown=false
		'StaticText1.backcolor=$ffffff
	case else
		passinterceptevent
end select
end event

getmousepos:
mousex=lparam
mousex=land(mousex,$ffff)
mousey=lparam
mousey=shr(mousey,16)
return

Timer1.timer
OBMain.flashwindow=true
Timer1.interval=500
end event

