; Dimension Variablesdim obc1 as obcommdim b1 as buttondim t1 as textboxdim l1 as listboxdim tl as longdim tw as integerdim tb as bytedim ts as stringOBMain.CREATEconstruct t1,10,10,200,20construct b1,10,40,200,20construct l1,220,10,170,270b1.tooltip="Button"obc1.portname="COM1"obc1.baudrate=9600obc1.parity=NOPARITYobc1.databits=8obc1.stopbits=ONESTOPBITobc1.opent1.text=hex(STATUS)mov edi,obc1+!HandleOffsmov eax,[edi]mov [tl],eaxts="Handle=$"+hex(tl)l1.additem tsmov edi,obc1mov eax, dword [obc1+!DCBlengthOffs]mov [tl],eaxts="DCBlength="+str(tl)l1.additem tsmov eax, dword [obc1+!BaudRateOffs]mov [tl],eaxts="BaudRate="+str(tl)l1.additem tsmov eax, dword [obc1+!fBits]mov [tl],eaxts="fBits=$"+hex(tl)l1.additem tsmov ax, word [obc1+!wReservedOffs]mov [tw],axts="wReserved="+str(tw)l1.additem tsmov ax, word [obc1+!XonLimOffs]mov [tw],axts="XonLim="+str(tw)l1.additem tsmov ax, word [obc1+!XoffLimOffs]mov [tw],axts="XoffLim="+str(tw)l1.additem tsmov al, byte [obc1+!ByteSizeOffs]mov [tb],alts="ByteSize="+str(tb)l1.additem tsmov al, byte [obc1+!ParityOffs]mov [tb],alts="Parity="+str(tb)l1.additem tsmov al, byte [obc1+!StopBitsOffs]mov [tb],alts="StopBits="+str(tb)l1.additem tsmov al, byte [obc1+!XonCharOffs]mov [tb],alts="XonChar=$"+hex(tb)l1.additem tsmov al, byte [obc1+!XoffCharOffs]mov [tb],alts="XoffChar=$"+hex(tb)l1.additem tsmov al, byte [obc1+!ErrorCharOffs]mov [tb],alts="ErrorChar="+str(tb)l1.additem tsmov al, byte [obc1+!EofCharOffs]mov [tb],alts="EofChar="+str(tb)l1.additem tsmov al, byte [obc1+!EvtCharOffs]mov [tb],alts="EvtChar="+str(tb)l1.additem tsmov ax, word [obc1+!wReserved1Offs]mov [tw],axts="wReserved1="+str(tw)l1.additem tsEND EVENTb1.commandobc1.output=t1.textend eventevtest:OBMain.backcolor=$ffffreturn