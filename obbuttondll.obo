CONST DFC_BUTTON=$4CONST DFCS_BUTTONPUSH=$10CONST DFCS_PUSHED=$200CONST DFCS_FLAT=$4000CONST ButtonDown=2CONST ButtonFlat=1CONST ButtonUp=0CONST SRCCOPY=$0CC0020CONST SRCERASE=$440328CONST OBM_MOUSE=$7000CONST BM_SETSTATE=$f3CONST GWL_STYLE=$fffffff0CONST _BufSize=32TYPE ControlStruct	ControlHandle AS HANDLE	ControlInstance AS LONG	ControlID AS LONG	ControlDC AS LONG	ControlParent AS HANDLE	ControlText AS STRING*32	ControlLeft AS LONG	ControlTop AS LONG	ControlWidth AS LONG	ControlHeight AS LONG	ControlValue AS LONG	ControlStyle AS LONG	ControlExStyle AS LONG	ControlBackColor AS LONG	ControlForeColor AS LONG	ControlButtonState AS LONG	ControlFont AS FONT	ControlBitmap AS BITMAP	ControlBitmapSet AS BOOLEAN	ControlColorSet AS BOOLEAN	ControlFontSet AS BOOLEAN	ControlSoundSet AS BOOLEAN	ControlSound2Set AS BOOLEAN	ControlEnabled AS BOOLEAN	ControlFlat AS BOOLEAN	ControlSound AS STRING*32	ControlSound2 AS STRING*32	ControlMouseXPos AS LONG	ControlMouseYPos AS LONG	ControlTextFormat AS LONGEND TYPEDIM ControlData AS ControlStruct VECTORDIM CreateData AS CreateStruct VECTORDIM StringPtr AS STRING VECTORDIM RectLeftSafe AS LONGDIM RectTopSafe AS LONGDIM CaptureDC AS DCDIM CaptureRight AS LONGDIM CaptureBottom AS LONGDIM ControlDCTemp AS DCDIM MemDC AS DCDIM Brush AS SOLIDBRUSHDIM Pen AS PENDIM Capture AS BOOLEANDIM TempInt AS LONGDIM MoveState AS LONGDIM Color1 AS LONGDIM Color2 AS LONGDIM I AS LONGDIM J AS LONGSETCLASSNAME OBButtonDECLARE FCN GetVersion(INTEGER) AS INTEGERBEGIN EXPORT	GetVersionEND EXPORTBEGIN SUB ProcessMsgIF wmsg<>WM_CREATE THEN	CALL SUB GetInstanceVars	GETWINDOWLONG hwnd,GWL_STYLE	IF STATUS<>ControlData.ControlStyle THEN		ControlData.ControlStyle=STATUS		CALL SUB SetControlStyle	END IFEND IFSELECT CASE wmsg	CASE WM_CREATE		ControlData.ControlHandle=hwnd		ControlData.ControlInstance=CreateData.cshInstance		ControlData.ControlID=CreateData.cshMenu		ControlData.ControlParent=CreateData.cshwndParent		ControlData.ControlLeft=CreateData.csLeft		ControlData.ControlTop=CreateData.csTop		ControlData.ControlWidth=CreateData.csWidth		ControlData.ControlHeight=CreateData.csHeight		ControlData.ControlStyle=CreateData.csStyle		ControlData.ControlExStyle=CreateData.csExStyle		IF CreateData.csText<>0 THEN			SETVECTOR StringPtr=CreateData.csText			ControlData.ControlText=StringPtr		END IF		ControlData.ControlForeColor=0		ControlData.ControlEnabled=TRUE				CALL SUB GetInstanceVars				ControlData.ControlBackColor=$c8d0d4		CALL SUB SetControlStyle	CASE WM_SETTEXT		SETVECTOR StringPtr=lparam		ControlData.ControlText=StringPtr		INVALIDATERECT hwnd	CASE WM_GETTEXT		_IOBuffer=ControlData.ControlText	CASE OBM_SETBITMAP		ControlData.ControlBitmap=wparam		ControlData.ControlBitmapSet=TRUE		INVALIDATERECT hwnd	CASE WM_SETFONT		ControlData.ControlFont=wparam		ControlData.ControlFontSet=TRUE		INVALIDATERECT hwnd	CASE OBM_SETVALUE		ControlData.ControlValue=wparam	CASE OBM_GETVALUE		ReturnValue=ControlData.ControlValue	CASE WM_MOVE		ControlData.ControlMouseXPos=wparam		ControlData.ControlMouseYPos=lparam		GETWINDOWRECT ControlData.ControlParent		RectLeftSafe=RectLeft		RectTopSafe=RectTop		GETWINDOWRECT hwnd		ControlData.ControlLeft=RectLeft-RectLeftSafe		ControlData.ControlTop=RectTop-RectTopSafe		CALL SUB GetInstanceVars		INVALIDATERECT hwnd		RETURNCODE 0	CASE WM_SIZE		GETCLIENTRECT hwnd,RectLeft		ControlData.ControlWidth=RectRight		ControlData.ControlHeight=RectBottom		CALL SUB GetInstanceVars		INVALIDATERECT hwnd		RETURNCODE 0	CASE WM_ENABLE		IF wparam=0 THEN			ControlData.ControlEnabled=FALSE		ELSE			ControlData.ControlEnabled=TRUE		END IF		INVALIDATERECT hwnd		PASSEVENT	CASE WM_DESTROY		DELETEOBJECT Brush		DELETEOBJECT Pen	CASE WM_LBUTTONDOWN		ControlData.ControlButtonState=ButtonDown		IF ControlData.ControlSound2Set=TRUE THEN			PLAYWAVE ControlData.ControlSound2		END IF		INVALIDATERECT hwnd		SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,4,hwnd	CASE BM_SETSTATE		IF wparam=1 THEN			ControlData.ControlButtonState=ButtonDown		ELSE			ControlData.ControlButtonState=ButtonUp		END IF		INVALIDATERECT hwnd	CASE WM_LBUTTONUP		ControlData.ControlButtonState=ButtonUp		INVALIDATERECT hwnd		CALL SUB MakeClick		SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,5,hwnd	CASE WM_RBUTTONDOWN		SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,6,hwnd	CASE WM_RBUTTONUP		SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,7,hwnd	CASE WM_MOUSEMOVE		MoveState=0		IF Capture=FALSE THEN			MoveState=1			SETCAPTURE hwnd			Capture=TRUE			CaptureDC=ControlDCTemp			CaptureRight=ControlData.ControlWidth			CaptureBottom=ControlData.ControlHeight			ControlData.ControlButtonState=ButtonUp			IF ControlData.ControlSoundSet=TRUE THEN				PLAYWAVE ControlData.ControlSound			END IF		ELSE			IF CursorPosX<0 OR CursorPosX>CaptureRight OR CursorPosY<0 OR CursorPosY>CaptureBottom THEN				MoveState=2				RELEASECAPTURE				Capture=FALSE				IF ControlData.ControlFlat=FALSE THEN					ControlData.ControlButtonState=ButtonUp				ELSE					ControlData.ControlButtonState=ButtonFlat				END IF			END IF		END IF		INVALIDATERECT hwnd		IF MoveState=0 THEN			SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,3,hwnd		ELSE			IF MoveState=1 THEN				SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,1,hwnd			ELSE				SENDMESSAGE ControlData.ControlParent,OBM_MOUSE,2,hwnd			END IF		END IF	CASE WM_PAINT		BEGIN PAINT hwnd,PaintStruct		ControlDCTemp=STATUS		IF ControlData.ControlButtonState=ButtonUp THEN			DRAWFRAMECONTROL ControlDCTemp,DFC_BUTTON,DFCS_BUTTONPUSH		ELSE			IF ControlData.ControlButtonState=ButtonFlat THEN				DRAWFRAMECONTROL ControlDCTemp,DFC_BUTTON,DFCS_BUTTONPUSH+DFCS_FLAT			ELSE				DRAWFRAMECONTROL ControlDCTemp,DFC_BUTTON,DFCS_BUTTONPUSH+DFCS_PUSHED			END IF		END IF		CALL SUB MakeRect		CALL SUB MakeText		CALL SUB MakeBitmap		END PAINT hwnd,PaintStruct		RELEASEDC ControlData.ControlParent,ControlDCTemp	CASE OBM_SETBACKCOLOR		ControlData.ControlBackColor=wparam		INVALIDATERECT hwnd	CASE OBM_SETFORECOLOR		ControlData.ControlForeColor=wparam		INVALIDATERECT hwnd	CASE OBM_SETSOUND		SETVECTOR StringPtr=wparam		ControlData.ControlSound=StringPtr		IF ControlData.ControlSound="" THEN			ControlData.ControlSoundSet=FALSE		ELSE			ControlData.ControlSoundSet=TRUE		END IF	CASE OBM_SETSOUND2		SETVECTOR StringPtr=wparam		ControlData.ControlSound2=StringPtr		IF ControlData.ControlSound="" THEN			ControlData.ControlSound2Set=FALSE		ELSE			ControlData.ControlSound2Set=TRUE		END IF	CASE OBM_GETMOUSEX		ReturnValue=CursorPosX	CASE OBM_GETMOUSEY		ReturnValue=CursorPosY	CASE ELSE		PASSEVENTEND SELECTEND SUBBEGIN SUB GetInstanceVarsRectLeft=0RectTop=0RectRight=ControlData.ControlWidthRectBottom=ControlData.ControlHeightEND SUBBEGIN SUB MakeClickSENDCOMMAND ControlData.ControlParent,ControlData.ControlID,0,hwndEND SUBBEGIN SUB MakeRectIF ControlData.ControlEnabled=TRUE THEN	CREATE Pen,SOLID,1,ControlData.ControlBackColor	CREATE Brush,ControlData.ControlBackColorELSE	CREATE Pen,SOLID,1,$c8d0d4	CREATE Brush,$c8d0d4END IFSELECTOBJECT ControlDCTemp,PenSELECTOBJECT ControlDCTemp,BrushRECTANGLE ControlDCTemp,2,2,ControlData.ControlWidth-2,ControlData.ControlHeight-2DELETEOBJECT PenDELETEOBJECT BrushEND SUBBEGIN SUB MakeTextIF ControlData.ControlFontSet=TRUE THEN	SELECTOBJECT ControlDCTemp,ControlData.ControlFontEND IFIF ControlData.ControlEnabled=TRUE THEN	SETTEXTCOLOR ControlDCTemp,ControlData.ControlForeColorELSE	SETTEXTCOLOR ControlDCTemp,$808080END IFSETBKMODE ControlDCTemp,TRANSPARENTDRAWTEXT ControlDCTemp,ControlData.ControlButtonState,ControlData.ControlButtonState,ControlData.ControlWidth-2,ControlData.ControlHeight-2,ControlData.ControlText,ControlData.ControlTextFormatEND SUBBEGIN SUB MakeBitmapIF ControlData.ControlBitmapSet=TRUE THEN	CREATECOMPATIBLEDC ControlDCTemp,MemDC	SELECTOBJECT MemDC,ControlData.ControlBitmap	GETBITMAP ControlData.ControlBitmap	IF ControlData.ControlEnabled=TRUE THEN		CALL SUB GetInstanceVars		GETPIXEL MemDC,0,2		Color1=STATUS		FOR I=0 TO bmHeight			FOR J=0 TO bmWidth				GETPIXEL MemDC,J,I				Color2=STATUS				IF Color2=Color1 THEN					SETPIXELV MemDC,J,I,ControlData.ControlBackColor				END IF			NEXT J		NEXT I		BITBLT ControlDCTemp,MemDC,SHR(ControlData.ControlButtonState,1)+2,SHR(ControlData.ControlButtonState,1)+2,ControlData.ControlWidth,ControlData.ControlHeight,SRCCOPY	ELSE		BITBLT ControlDCTemp,MemDC,ControlData.ControlButtonState,ControlData.ControlButtonState,ControlData.ControlWidth,ControlData.ControlHeight,SRCERASE	END IF	DELETEDC MemDCEND IFEND SUBBEGIN SUB SetControlStyleControlData.ControlTextFormat=$20IF BITTST(ControlData.ControlStyle,0)=TRUE THEN	ControlData.ControlTextFormat=BITSET(ControlData.ControlTextFormat,0)END IFIF BITTST(ControlData.ControlStyle,1)=TRUE THEN	ControlData.ControlTextFormat=BITSET(ControlData.ControlTextFormat,1)	END IFIF BITTST(ControlData.ControlStyle,2)=TRUE THEN	ControlData.ControlTextFormat=BITSET(ControlData.ControlTextFormat,2)END IFIF BITTST(ControlData.ControlStyle,3)=TRUE THEN	ControlData.ControlTextFormat=BITSET(ControlData.ControlTextFormat,3)END IFIF BITTST(ControlData.ControlStyle,4)=TRUE THEN	ControlData.ControlFlat=TRUE	ControlData.ControlButtonState=ButtonFlatELSE	ControlData.ControlButtonState=ButtonUpEND IFEND SUBBEGIN FCN GetVersion(0)RETURN 100END FCN