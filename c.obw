; Dimension Variablesdim obc1 as obcommdim b1 as buttondim t1 as textboxdim b2 as buttondim t2 as textboxdim b3 as buttondim t3 as textboxdim b4 as buttondim t4 as textboxdim l1 as listboxdim tl as longdim tw as integerdim tb as bytedim ts as stringdim tm as timerOBMain.CREATE;tm.interval=10create t1,10,10,200,20create b1,10,40,200,20b1.text="Send"create t2,10,70,200,20create b2,10,100,200,20b2.text="Status"create t3,10,130,200,20create b3,10,160,200,20b3.text="Receive"create t4,10,190,200,20create b4,10,220,200,20b4.text="Receive Buffer"create l1,220,10,170,270b1.tooltip="Button"obc1.portname="COM1"obc1.baudrate=57600obc1.parity=NOPARITYobc1.databits=8obc1.stopbits=ONESTOPBITobc1.rts=2obc1.ctscheck=falseobc1.dsrcheck=falseobc1.paritycheck=falseobc1.dtr=0on error goto openerrobc1.opent1.text=hex(STATUS)mov edi,obc1+!HandleOffsmov eax,[edi]mov [tl],eaxts="Handle=$"+hex(tl)l1.additem tsmov edi,obc1mov eax, dword [obc1+!DCBlengthOffs]mov [tl],eaxts="DCBlength="+str(tl)l1.additem tsmov eax, dword [obc1+!BaudRateOffs]mov [tl],eaxts="BaudRate="+str(tl)l1.additem tsmov eax, dword [obc1+!fBitsOffs]mov [tl],eaxts="fBits=$"+hex(tl)l1.additem tsmov ax, word [obc1+!wReservedOffs]mov [tw],axts="wReserved="+str(tw)l1.additem tsmov ax, word [obc1+!XonLimOffs]mov [tw],axts="XonLim="+str(tw)l1.additem tsmov ax, word [obc1+!XoffLimOffs]mov [tw],axts="XoffLim="+str(tw)l1.additem tsmov al, byte [obc1+!ByteSizeOffs]mov [tb],alts="ByteSize="+str(tb)l1.additem tsmov al, byte [obc1+!ParityOffs]mov [tb],alts="Parity="+str(tb)l1.additem tsmov al, byte [obc1+!StopBitsOffs]mov [tb],alts="StopBits="+str(tb)l1.additem tsmov al, byte [obc1+!XonCharOffs]mov [tb],alts="XonChar=$"+hex(tb)l1.additem tsmov al, byte [obc1+!XoffCharOffs]mov [tb],alts="XoffChar=$"+hex(tb)l1.additem tsmov al, byte [obc1+!ErrorCharOffs]mov [tb],alts="ErrorChar="+str(tb)l1.additem tsmov al, byte [obc1+!EofCharOffs]mov [tb],alts="EofChar="+str(tb)l1.additem tsmov al, byte [obc1+!EvtCharOffs]mov [tb],alts="EvtChar="+str(tb)l1.additem tsmov ax, word [obc1+!wReserved1Offs]mov [tw],axts="wReserved1="+str(tw)l1.additem tsEND EVENTb1.commandobc1.output=t1.textend eventb2.commandtl=obc1.statust2.text=str(tl)end eventb3.commandt3.text=obc1.inputend eventb4.command;ts=obc1.inputbuffert4.text=obc1.inputbufferend eventtm.timertl=obc1.statusif tl=0 then	returnend ift3.text=obc1.inputend eventopenerr:msgbox "Error","Cannot open COM1",MB_OKend